plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.sparta'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

allprojects {
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starter Validation: 데이터 유효성 검사를 위한 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Replace org.json with Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.0' // Updated to latest version

    // MySQL Connector
    implementation 'mysql:mysql-connector-java:8.0.32'
    implementation 'mysql:mysql-connector-java'

    // Update AWS dependencies to latest versions to fix transitive vulnerabilities
    implementation 'software.amazon.awssdk:s3:2.20.44'
    implementation 'software.amazon.awssdk:core:2.20.44'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Spring Boot Test Starter
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // JUnit 5
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    // Mockito
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.12.4'
    testImplementation 'org.mockito:mockito-inline:4.11.0'

    // Spring Security Test
    testImplementation 'org.springframework.security:spring-security-test'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
}

tasks.named('test') {
    useJUnitPlatform()
}

// QueryDSL 설정 부분
def generated = 'build/generated/sources/annotationProcessor/java/main'

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory.set(file(generated))
}

sourceSets {
    main.java.srcDirs += [generated]
}

clean {
    delete file(generated)
}
